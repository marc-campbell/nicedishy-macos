on:
  push:
    branches: [release-ci]

jobs:
  build-and-release:
    runs-on: self-hosted

    steps:
      - name: check out code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
            
      - name: setup-cocoapods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          podfile-path: ./Podfile.lock

      # - name: install pods  
      #   run: |
      #     pod install

      - name: import signing certificates
        run: |
          KEYCHAIN_FILE=default.keychain
          KEYCHAIN_PASSWORD=myvoiceismypassport
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security default-keychain -s $KEYCHAIN_FILE
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security import <(echo $SIGNING_CERTIFICATE_P12_DATA | base64 --decode) \
                          -f pkcs12 \
                          -k $KEYCHAIN_FILE \
                          -P $SIGNING_CERTIFICATE_PASSWORD \
                          -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}

      - name: build app
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          xcodebuild \
            -workspace NiceDishy.xcworkspace \
            -scheme "NiceDishy" \
            install \
            DSTROOT=build/root

      - name: debug
        run: |
          ls && ls build && ls build/root && ls build/root/Applications
      - name: package app
        run: |
          hdiutil create \
                  -fs HFS+ \
                  -srcfolder "build/root/Applications/NiceDishy.app" \
                  -volname "NiceDishy" "build/NiceDishy.dmg"

      - name: sign app
        run: |
          npx notarize-cli --file "build/NiceDishy.dmg"
        env:
          NOTARIZE_USERNAME: ${{ secrets.NOTARIZE_USERNAME }}
          NOTARIZE_PASSWORD: ${{ secrets.NOTARIZE_PASSWORD }}

      - name: release app
        uses: softprops/action-gh-release@v1
        with:
          files: build/NiceDishy.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}