// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spacex/api/device/device.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AuthenticateRequest;
@class ClientPlatform;
@class DeviceInfo;
@class DishAuthenticateResponse;
@class DishGetContextRequest;
@class DishGetContextResponse;
@class DishGetEmcRequest;
@class DishGetEmcResponse;
@class DishGetHistoryResponse;
@class DishGetObstructionMapRequest;
@class DishGetObstructionMapResponse;
@class DishGetStatusResponse;
@class DishSetEmcRequest;
@class DishSetEmcResponse;
@class DishStowRequest;
@class DishStowResponse;
@class ECEFPosition;
@class EnableFlowRequest;
@class EnableFlowResponse;
@class Event;
@class FactoryResetRequest;
@class FactoryResetResponse;
@class FlushTelemRequest;
@class FlushTelemResponse;
@class FuseRequest;
@class FuseResponse;
@class GetConnectionsRequest;
@class GetConnectionsResponse;
@class GetConnectionsResponse_ServiceConnection;
@class GetDeviceInfoRequest;
@class GetDeviceInfoResponse;
@class GetHeapDumpRequest;
@class GetHeapDumpResponse;
@class GetHistoryRequest;
@class GetLocationRequest;
@class GetLocationResponse;
@class GetLogRequest;
@class GetLogResponse;
@class GetNetworkInterfacesRequest;
@class GetNetworkInterfacesResponse;
@class GetNextIdRequest;
@class GetNextIdResponse;
@class GetPersistentStatsRequest;
@class GetPingRequest;
@class GetPingResponse;
@class GetStatusRequest;
@class LLAPosition;
@class NetworkInterface;
@class PingHostRequest;
@class PingHostResponse;
@class PingResult;
@class PublicKey;
@class RebootRequest;
@class RebootResponse;
@class Request;
@class Response;
@class RestartControlRequest;
@class RestartControlResponse;
@class SetSkuRequest;
@class SetSkuResponse;
@class SetTrustedKeysRequest;
@class SetTrustedKeysResponse;
@class SignedData;
@class SpeedTestRequest;
@class SpeedTestResponse;
@class SpeedTestStats;
@class Status;
@class TransceiverGetStatusRequest;
@class TransceiverGetStatusResponse;
@class TransceiverGetTelemetryRequest;
@class TransceiverGetTelemetryResponse;
@class TransceiverIFLoopbackTestRequest;
@class TransceiverIFLoopbackTestResponse;
@class UpdateRequest;
@class UpdateResponse;
@class WifiAccountBondingEvent;
@class WifiAuthenticateResponse;
@class WifiGetClientsRequest;
@class WifiGetClientsResponse;
@class WifiGetConfigRequest;
@class WifiGetConfigResponse;
@class WifiGetDiagnosticsRequest;
@class WifiGetDiagnosticsResponse;
@class WifiGetHistoryResponse;
@class WifiGetNetworkConfigRequest;
@class WifiGetNetworkConfigResponse;
@class WifiGetPersistentStatsResponse;
@class WifiGetPingMetricsRequest;
@class WifiGetPingMetricsResponse;
@class WifiGetStatusResponse;
@class WifiNewClientConnectedEvent;
@class WifiNewPeerEvent;
@class WifiSetConfigRequest;
@class WifiSetConfigResponse;
@class WifiSetMeshDeviceTrustRequest;
@class WifiSetMeshDeviceTrustResponse;
@class WifiSetupRequest;
@class WifiSetupResponse;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ClientPlatform_Platform

typedef GPB_ENUM(ClientPlatform_Platform) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ClientPlatform_Platform_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClientPlatform_Platform_Unknown = 0,
  ClientPlatform_Platform_Ios = 1,
  ClientPlatform_Platform_Android = 2,
  ClientPlatform_Platform_Web = 3,
};

GPBEnumDescriptor *ClientPlatform_Platform_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClientPlatform_Platform_IsValidValue(int32_t value);

#pragma mark - DeviceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DeviceRoot : GPBRootObject
@end

#pragma mark - ToDevice

typedef GPB_ENUM(ToDevice_FieldNumber) {
  ToDevice_FieldNumber_Request = 1,
};

typedef GPB_ENUM(ToDevice_Message_OneOfCase) {
  ToDevice_Message_OneOfCase_GPBUnsetOneOfCase = 0,
  ToDevice_Message_OneOfCase_Request = 1,
};

GPB_FINAL @interface ToDevice : GPBMessage

@property(nonatomic, readonly) ToDevice_Message_OneOfCase messageOneOfCase;


@property(nonatomic, readwrite, strong, null_resettable) Request *request;

@end

/**
 * Clears whatever value was set for the oneof 'message'.
 **/
void ToDevice_ClearMessageOneOfCase(ToDevice *message);

#pragma mark - FromDevice

typedef GPB_ENUM(FromDevice_FieldNumber) {
  FromDevice_FieldNumber_Response = 1,
  FromDevice_FieldNumber_Event = 2,
};

typedef GPB_ENUM(FromDevice_Message_OneOfCase) {
  FromDevice_Message_OneOfCase_GPBUnsetOneOfCase = 0,
  FromDevice_Message_OneOfCase_Response = 1,
  FromDevice_Message_OneOfCase_Event = 2,
};

GPB_FINAL @interface FromDevice : GPBMessage

@property(nonatomic, readonly) FromDevice_Message_OneOfCase messageOneOfCase;


@property(nonatomic, readwrite, strong, null_resettable) Response *response;


@property(nonatomic, readwrite, strong, null_resettable) Event *event;

@end

/**
 * Clears whatever value was set for the oneof 'message'.
 **/
void FromDevice_ClearMessageOneOfCase(FromDevice *message);

#pragma mark - Request

typedef GPB_ENUM(Request_FieldNumber) {
  Request_FieldNumber_Id_p = 1,
  Request_FieldNumber_TargetId = 13,
  Request_FieldNumber_EpochId = 14,
  Request_FieldNumber_SignedRequest = 15,
  Request_FieldNumber_Reboot = 1001,
  Request_FieldNumber_SpeedTest = 1003,
  Request_FieldNumber_GetStatus = 1004,
  Request_FieldNumber_Authenticate = 1005,
  Request_FieldNumber_GetNextId = 1006,
  Request_FieldNumber_GetHistory = 1007,
  Request_FieldNumber_GetDeviceInfo = 1008,
  Request_FieldNumber_GetPing = 1009,
  Request_FieldNumber_SetTrustedKeys = 1010,
  Request_FieldNumber_FactoryReset = 1011,
  Request_FieldNumber_GetLog = 1012,
  Request_FieldNumber_SetSku = 1013,
  Request_FieldNumber_Update = 1014,
  Request_FieldNumber_GetNetworkInterfaces = 1015,
  Request_FieldNumber_PingHost = 1016,
  Request_FieldNumber_GetLocation = 1017,
  Request_FieldNumber_EnableFlow = 1018,
  Request_FieldNumber_GetHeapDump = 1019,
  Request_FieldNumber_RestartControl = 1020,
  Request_FieldNumber_Fuse = 1021,
  Request_FieldNumber_GetPersistentStats = 1022,
  Request_FieldNumber_GetConnections = 1023,
  Request_FieldNumber_FlushTelem = 1026,
  Request_FieldNumber_DishStow = 2002,
  Request_FieldNumber_DishGetContext = 2003,
  Request_FieldNumber_DishSetEmc = 2007,
  Request_FieldNumber_DishGetObstructionMap = 2008,
  Request_FieldNumber_DishGetEmc = 2009,
  Request_FieldNumber_WifiSetConfig = 3001,
  Request_FieldNumber_WifiGetClients = 3002,
  Request_FieldNumber_WifiSetup = 3003,
  Request_FieldNumber_WifiGetPingMetrics = 3007,
  Request_FieldNumber_WifiGetDiagnostics = 3008,
  Request_FieldNumber_WifiGetConfig = 3009,
  Request_FieldNumber_WifiGetNetworkConfig = 3011,
  Request_FieldNumber_WifiSetMeshDeviceTrust = 3012,
  Request_FieldNumber_TransceiverIfLoopbackTest = 4001,
  Request_FieldNumber_TransceiverGetStatus = 4003,
  Request_FieldNumber_TransceiverGetTelemetry = 4004,
};

typedef GPB_ENUM(Request_Request_OneOfCase) {
  Request_Request_OneOfCase_GPBUnsetOneOfCase = 0,
  Request_Request_OneOfCase_SignedRequest = 15,
  Request_Request_OneOfCase_GetNextId = 1006,
  Request_Request_OneOfCase_Authenticate = 1005,
  Request_Request_OneOfCase_EnableFlow = 1018,
  Request_Request_OneOfCase_FactoryReset = 1011,
  Request_Request_OneOfCase_GetDeviceInfo = 1008,
  Request_Request_OneOfCase_GetHistory = 1007,
  Request_Request_OneOfCase_GetLog = 1012,
  Request_Request_OneOfCase_GetNetworkInterfaces = 1015,
  Request_Request_OneOfCase_GetPing = 1009,
  Request_Request_OneOfCase_PingHost = 1016,
  Request_Request_OneOfCase_GetStatus = 1004,
  Request_Request_OneOfCase_Reboot = 1001,
  Request_Request_OneOfCase_SetSku = 1013,
  Request_Request_OneOfCase_SetTrustedKeys = 1010,
  Request_Request_OneOfCase_SpeedTest = 1003,
  Request_Request_OneOfCase_Update = 1014,
  Request_Request_OneOfCase_GetLocation = 1017,
  Request_Request_OneOfCase_GetHeapDump = 1019,
  Request_Request_OneOfCase_RestartControl = 1020,
  Request_Request_OneOfCase_Fuse = 1021,
  Request_Request_OneOfCase_GetPersistentStats = 1022,
  Request_Request_OneOfCase_GetConnections = 1023,
  Request_Request_OneOfCase_FlushTelem = 1026,
  Request_Request_OneOfCase_DishStow = 2002,
  Request_Request_OneOfCase_DishGetContext = 2003,
  Request_Request_OneOfCase_DishGetObstructionMap = 2008,
  Request_Request_OneOfCase_DishSetEmc = 2007,
  Request_Request_OneOfCase_DishGetEmc = 2009,
  Request_Request_OneOfCase_TransceiverIfLoopbackTest = 4001,
  Request_Request_OneOfCase_TransceiverGetStatus = 4003,
  Request_Request_OneOfCase_TransceiverGetTelemetry = 4004,
  Request_Request_OneOfCase_WifiGetClients = 3002,
  Request_Request_OneOfCase_WifiGetDiagnostics = 3008,
  Request_Request_OneOfCase_WifiGetPingMetrics = 3007,
  Request_Request_OneOfCase_WifiSetConfig = 3001,
  Request_Request_OneOfCase_WifiGetConfig = 3009,
  Request_Request_OneOfCase_WifiSetup = 3003,
  Request_Request_OneOfCase_WifiGetNetworkConfig = 3011,
  Request_Request_OneOfCase_WifiSetMeshDeviceTrust = 3012,
};

GPB_FINAL @interface Request : GPBMessage


@property(nonatomic, readwrite) uint64_t id_p;


@property(nonatomic, readwrite) uint64_t epochId;


@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;

@property(nonatomic, readonly) Request_Request_OneOfCase requestOneOfCase;


@property(nonatomic, readwrite, strong, null_resettable) SignedData *signedRequest;


@property(nonatomic, readwrite, strong, null_resettable) GetNextIdRequest *getNextId;


@property(nonatomic, readwrite, strong, null_resettable) AuthenticateRequest *authenticate;


@property(nonatomic, readwrite, strong, null_resettable) EnableFlowRequest *enableFlow;


@property(nonatomic, readwrite, strong, null_resettable) FactoryResetRequest *factoryReset;


@property(nonatomic, readwrite, strong, null_resettable) GetDeviceInfoRequest *getDeviceInfo;


@property(nonatomic, readwrite, strong, null_resettable) GetHistoryRequest *getHistory;


@property(nonatomic, readwrite, strong, null_resettable) GetLogRequest *getLog;


@property(nonatomic, readwrite, strong, null_resettable) GetNetworkInterfacesRequest *getNetworkInterfaces;


@property(nonatomic, readwrite, strong, null_resettable) GetPingRequest *getPing;


@property(nonatomic, readwrite, strong, null_resettable) PingHostRequest *pingHost;


@property(nonatomic, readwrite, strong, null_resettable) GetStatusRequest *getStatus;


@property(nonatomic, readwrite, strong, null_resettable) RebootRequest *reboot;


@property(nonatomic, readwrite, strong, null_resettable) SetSkuRequest *setSku;


@property(nonatomic, readwrite, strong, null_resettable) SetTrustedKeysRequest *setTrustedKeys;


@property(nonatomic, readwrite, strong, null_resettable) SpeedTestRequest *speedTest;


@property(nonatomic, readwrite, strong, null_resettable) UpdateRequest *update;


@property(nonatomic, readwrite, strong, null_resettable) GetLocationRequest *getLocation;


@property(nonatomic, readwrite, strong, null_resettable) GetHeapDumpRequest *getHeapDump;


@property(nonatomic, readwrite, strong, null_resettable) RestartControlRequest *restartControl;


@property(nonatomic, readwrite, strong, null_resettable) FuseRequest *fuse;


@property(nonatomic, readwrite, strong, null_resettable) GetPersistentStatsRequest *getPersistentStats;


@property(nonatomic, readwrite, strong, null_resettable) GetConnectionsRequest *getConnections;


@property(nonatomic, readwrite, strong, null_resettable) FlushTelemRequest *flushTelem;


@property(nonatomic, readwrite, strong, null_resettable) DishStowRequest *dishStow;


@property(nonatomic, readwrite, strong, null_resettable) DishGetContextRequest *dishGetContext;


@property(nonatomic, readwrite, strong, null_resettable) DishGetObstructionMapRequest *dishGetObstructionMap;


@property(nonatomic, readwrite, strong, null_resettable) DishSetEmcRequest *dishSetEmc;


@property(nonatomic, readwrite, strong, null_resettable) DishGetEmcRequest *dishGetEmc;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverIFLoopbackTestRequest *transceiverIfLoopbackTest;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverGetStatusRequest *transceiverGetStatus;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverGetTelemetryRequest *transceiverGetTelemetry;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetClientsRequest *wifiGetClients;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetDiagnosticsRequest *wifiGetDiagnostics;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetPingMetricsRequest *wifiGetPingMetrics;


@property(nonatomic, readwrite, strong, null_resettable) WifiSetConfigRequest *wifiSetConfig;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetConfigRequest *wifiGetConfig;


@property(nonatomic, readwrite, strong, null_resettable) WifiSetupRequest *wifiSetup;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetNetworkConfigRequest *wifiGetNetworkConfig;


@property(nonatomic, readwrite, strong, null_resettable) WifiSetMeshDeviceTrustRequest *wifiSetMeshDeviceTrust;

@end

/**
 * Clears whatever value was set for the oneof 'request'.
 **/
void Request_ClearRequestOneOfCase(Request *message);

#pragma mark - Response

typedef GPB_ENUM(Response_FieldNumber) {
  Response_FieldNumber_Id_p = 1,
  Response_FieldNumber_Status = 2,
  Response_FieldNumber_ApiVersion = 3,
  Response_FieldNumber_Reboot = 1001,
  Response_FieldNumber_SpeedTest = 1003,
  Response_FieldNumber_GetDeviceInfo = 1004,
  Response_FieldNumber_GetNextId = 1006,
  Response_FieldNumber_GetPing = 1009,
  Response_FieldNumber_SetTrustedKeys = 1010,
  Response_FieldNumber_FactoryReset = 1011,
  Response_FieldNumber_GetLog = 1012,
  Response_FieldNumber_SetSku = 1013,
  Response_FieldNumber_Update = 1014,
  Response_FieldNumber_GetNetworkInterfaces = 1015,
  Response_FieldNumber_PingHost = 1016,
  Response_FieldNumber_GetLocation = 1017,
  Response_FieldNumber_EnableFlow = 1018,
  Response_FieldNumber_GetHeapDump = 1019,
  Response_FieldNumber_RestartControl = 1020,
  Response_FieldNumber_Fuse = 1021,
  Response_FieldNumber_GetConnections = 1023,
  Response_FieldNumber_FlushTelem = 1026,
  Response_FieldNumber_DishStow = 2002,
  Response_FieldNumber_DishGetContext = 2003,
  Response_FieldNumber_DishGetStatus = 2004,
  Response_FieldNumber_DishAuthenticate = 2005,
  Response_FieldNumber_DishGetHistory = 2006,
  Response_FieldNumber_DishSetEmc = 2007,
  Response_FieldNumber_DishGetObstructionMap = 2008,
  Response_FieldNumber_DishGetEmc = 2009,
  Response_FieldNumber_WifiSetConfig = 3001,
  Response_FieldNumber_WifiGetClients = 3002,
  Response_FieldNumber_WifiSetup = 3003,
  Response_FieldNumber_WifiGetStatus = 3004,
  Response_FieldNumber_WifiAuthenticate = 3005,
  Response_FieldNumber_WifiGetHistory = 3006,
  Response_FieldNumber_WifiGetPingMetrics = 3007,
  Response_FieldNumber_WifiGetDiagnostics = 3008,
  Response_FieldNumber_WifiGetConfig = 3009,
  Response_FieldNumber_WifiGetNetworkConfig = 3011,
  Response_FieldNumber_WifiSetMeshDeviceTrust = 3012,
  Response_FieldNumber_WifiGetPersistentStats = 3022,
  Response_FieldNumber_TransceiverIfLoopbackTest = 4001,
  Response_FieldNumber_TransceiverGetStatus = 4003,
  Response_FieldNumber_TransceiverGetTelemetry = 4004,
};

typedef GPB_ENUM(Response_Response_OneOfCase) {
  Response_Response_OneOfCase_GPBUnsetOneOfCase = 0,
  Response_Response_OneOfCase_GetNextId = 1006,
  Response_Response_OneOfCase_EnableFlow = 1018,
  Response_Response_OneOfCase_FactoryReset = 1011,
  Response_Response_OneOfCase_GetDeviceInfo = 1004,
  Response_Response_OneOfCase_GetLog = 1012,
  Response_Response_OneOfCase_GetNetworkInterfaces = 1015,
  Response_Response_OneOfCase_GetPing = 1009,
  Response_Response_OneOfCase_PingHost = 1016,
  Response_Response_OneOfCase_Reboot = 1001,
  Response_Response_OneOfCase_SpeedTest = 1003,
  Response_Response_OneOfCase_SetSku = 1013,
  Response_Response_OneOfCase_SetTrustedKeys = 1010,
  Response_Response_OneOfCase_Update = 1014,
  Response_Response_OneOfCase_GetLocation = 1017,
  Response_Response_OneOfCase_GetHeapDump = 1019,
  Response_Response_OneOfCase_RestartControl = 1020,
  Response_Response_OneOfCase_Fuse = 1021,
  Response_Response_OneOfCase_GetConnections = 1023,
  Response_Response_OneOfCase_FlushTelem = 1026,
  Response_Response_OneOfCase_DishAuthenticate = 2005,
  Response_Response_OneOfCase_DishGetContext = 2003,
  Response_Response_OneOfCase_DishGetHistory = 2006,
  Response_Response_OneOfCase_DishGetStatus = 2004,
  Response_Response_OneOfCase_DishGetObstructionMap = 2008,
  Response_Response_OneOfCase_DishStow = 2002,
  Response_Response_OneOfCase_DishSetEmc = 2007,
  Response_Response_OneOfCase_DishGetEmc = 2009,
  Response_Response_OneOfCase_TransceiverIfLoopbackTest = 4001,
  Response_Response_OneOfCase_TransceiverGetStatus = 4003,
  Response_Response_OneOfCase_TransceiverGetTelemetry = 4004,
  Response_Response_OneOfCase_WifiAuthenticate = 3005,
  Response_Response_OneOfCase_WifiGetClients = 3002,
  Response_Response_OneOfCase_WifiGetDiagnostics = 3008,
  Response_Response_OneOfCase_WifiGetHistory = 3006,
  Response_Response_OneOfCase_WifiGetPingMetrics = 3007,
  Response_Response_OneOfCase_WifiGetStatus = 3004,
  Response_Response_OneOfCase_WifiSetConfig = 3001,
  Response_Response_OneOfCase_WifiGetConfig = 3009,
  Response_Response_OneOfCase_WifiSetup = 3003,
  Response_Response_OneOfCase_WifiGetPersistentStats = 3022,
  Response_Response_OneOfCase_WifiGetNetworkConfig = 3011,
  Response_Response_OneOfCase_WifiSetMeshDeviceTrust = 3012,
};

GPB_FINAL @interface Response : GPBMessage


@property(nonatomic, readwrite) uint64_t id_p;


@property(nonatomic, readwrite, strong, null_resettable) Status *status;
/** Test to see if @c status has been set. */
@property(nonatomic, readwrite) BOOL hasStatus;


@property(nonatomic, readwrite) uint64_t apiVersion;

@property(nonatomic, readonly) Response_Response_OneOfCase responseOneOfCase;


@property(nonatomic, readwrite, strong, null_resettable) GetNextIdResponse *getNextId;


@property(nonatomic, readwrite, strong, null_resettable) EnableFlowResponse *enableFlow;


@property(nonatomic, readwrite, strong, null_resettable) FactoryResetResponse *factoryReset;


@property(nonatomic, readwrite, strong, null_resettable) GetDeviceInfoResponse *getDeviceInfo;


@property(nonatomic, readwrite, strong, null_resettable) GetLogResponse *getLog;


@property(nonatomic, readwrite, strong, null_resettable) GetNetworkInterfacesResponse *getNetworkInterfaces;


@property(nonatomic, readwrite, strong, null_resettable) GetPingResponse *getPing;


@property(nonatomic, readwrite, strong, null_resettable) PingHostResponse *pingHost;


@property(nonatomic, readwrite, strong, null_resettable) RebootResponse *reboot;


@property(nonatomic, readwrite, strong, null_resettable) SpeedTestResponse *speedTest;


@property(nonatomic, readwrite, strong, null_resettable) SetSkuResponse *setSku;


@property(nonatomic, readwrite, strong, null_resettable) SetTrustedKeysResponse *setTrustedKeys;


@property(nonatomic, readwrite, strong, null_resettable) UpdateResponse *update;


@property(nonatomic, readwrite, strong, null_resettable) GetLocationResponse *getLocation;


@property(nonatomic, readwrite, strong, null_resettable) GetHeapDumpResponse *getHeapDump;


@property(nonatomic, readwrite, strong, null_resettable) RestartControlResponse *restartControl;


@property(nonatomic, readwrite, strong, null_resettable) FuseResponse *fuse;


@property(nonatomic, readwrite, strong, null_resettable) GetConnectionsResponse *getConnections;


@property(nonatomic, readwrite, strong, null_resettable) FlushTelemResponse *flushTelem;


@property(nonatomic, readwrite, strong, null_resettable) DishAuthenticateResponse *dishAuthenticate;


@property(nonatomic, readwrite, strong, null_resettable) DishGetContextResponse *dishGetContext;


@property(nonatomic, readwrite, strong, null_resettable) DishGetHistoryResponse *dishGetHistory;


@property(nonatomic, readwrite, strong, null_resettable) DishGetStatusResponse *dishGetStatus;


@property(nonatomic, readwrite, strong, null_resettable) DishGetObstructionMapResponse *dishGetObstructionMap;


@property(nonatomic, readwrite, strong, null_resettable) DishStowResponse *dishStow;


@property(nonatomic, readwrite, strong, null_resettable) DishSetEmcResponse *dishSetEmc;


@property(nonatomic, readwrite, strong, null_resettable) DishGetEmcResponse *dishGetEmc;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverIFLoopbackTestResponse *transceiverIfLoopbackTest;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverGetStatusResponse *transceiverGetStatus;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverGetTelemetryResponse *transceiverGetTelemetry;


@property(nonatomic, readwrite, strong, null_resettable) WifiAuthenticateResponse *wifiAuthenticate;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetClientsResponse *wifiGetClients;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetDiagnosticsResponse *wifiGetDiagnostics;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetHistoryResponse *wifiGetHistory;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetPingMetricsResponse *wifiGetPingMetrics;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetStatusResponse *wifiGetStatus;


@property(nonatomic, readwrite, strong, null_resettable) WifiSetConfigResponse *wifiSetConfig;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetConfigResponse *wifiGetConfig;


@property(nonatomic, readwrite, strong, null_resettable) WifiSetupResponse *wifiSetup;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetPersistentStatsResponse *wifiGetPersistentStats;


@property(nonatomic, readwrite, strong, null_resettable) WifiGetNetworkConfigResponse *wifiGetNetworkConfig;


@property(nonatomic, readwrite, strong, null_resettable) WifiSetMeshDeviceTrustResponse *wifiSetMeshDeviceTrust;

@end

/**
 * Clears whatever value was set for the oneof 'response'.
 **/
void Response_ClearResponseOneOfCase(Response *message);

#pragma mark - Event

typedef GPB_ENUM(Event_FieldNumber) {
  Event_FieldNumber_WifiNewClientConnected = 3001,
  Event_FieldNumber_WifiAccountBonding = 3002,
  Event_FieldNumber_WifiNewPeer = 3003,
};

typedef GPB_ENUM(Event_Event_OneOfCase) {
  Event_Event_OneOfCase_GPBUnsetOneOfCase = 0,
  Event_Event_OneOfCase_WifiNewClientConnected = 3001,
  Event_Event_OneOfCase_WifiAccountBonding = 3002,
  Event_Event_OneOfCase_WifiNewPeer = 3003,
};

GPB_FINAL @interface Event : GPBMessage

@property(nonatomic, readonly) Event_Event_OneOfCase eventOneOfCase;


@property(nonatomic, readwrite, strong, null_resettable) WifiNewClientConnectedEvent *wifiNewClientConnected;


@property(nonatomic, readwrite, strong, null_resettable) WifiAccountBondingEvent *wifiAccountBonding;


@property(nonatomic, readwrite, strong, null_resettable) WifiNewPeerEvent *wifiNewPeer;

@end

/**
 * Clears whatever value was set for the oneof 'event'.
 **/
void Event_ClearEventOneOfCase(Event *message);

#pragma mark - EnableFlowRequest

typedef GPB_ENUM(EnableFlowRequest_FieldNumber) {
  EnableFlowRequest_FieldNumber_Name = 1,
  EnableFlowRequest_FieldNumber_DurationH = 2,
};

GPB_FINAL @interface EnableFlowRequest : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *name;


@property(nonatomic, readwrite) uint32_t durationH;

@end

#pragma mark - EnableFlowResponse

GPB_FINAL @interface EnableFlowResponse : GPBMessage

@end

#pragma mark - FlushTelemRequest

GPB_FINAL @interface FlushTelemRequest : GPBMessage

@end

#pragma mark - FlushTelemResponse

GPB_FINAL @interface FlushTelemResponse : GPBMessage

@end

#pragma mark - FactoryResetRequest

GPB_FINAL @interface FactoryResetRequest : GPBMessage

@end

#pragma mark - FactoryResetResponse

GPB_FINAL @interface FactoryResetResponse : GPBMessage

@end

#pragma mark - FuseRequest

GPB_FINAL @interface FuseRequest : GPBMessage

@end

#pragma mark - FuseResponse

GPB_FINAL @interface FuseResponse : GPBMessage

@end

#pragma mark - GetHistoryRequest

GPB_FINAL @interface GetHistoryRequest : GPBMessage

@end

#pragma mark - GetLogRequest

GPB_FINAL @interface GetLogRequest : GPBMessage

@end

#pragma mark - GetLogResponse

typedef GPB_ENUM(GetLogResponse_FieldNumber) {
  GetLogResponse_FieldNumber_Syslog = 1,
  GetLogResponse_FieldNumber_OfflineLog = 2,
};

GPB_FINAL @interface GetLogResponse : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *syslog;


@property(nonatomic, readwrite, copy, null_resettable) NSString *offlineLog;

@end

#pragma mark - GetPingRequest

GPB_FINAL @interface GetPingRequest : GPBMessage

@end

#pragma mark - GetPingResponse

typedef GPB_ENUM(GetPingResponse_FieldNumber) {
  GetPingResponse_FieldNumber_Results = 1,
};

GPB_FINAL @interface GetPingResponse : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, PingResult*> *results;
/** The number of items in @c results without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger results_Count;

@end

#pragma mark - PingHostRequest

typedef GPB_ENUM(PingHostRequest_FieldNumber) {
  PingHostRequest_FieldNumber_Address = 3,
};

GPB_FINAL @interface PingHostRequest : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - PingHostResponse

typedef GPB_ENUM(PingHostResponse_FieldNumber) {
  PingHostResponse_FieldNumber_Result = 1,
};

GPB_FINAL @interface PingHostResponse : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) PingResult *result;
/** Test to see if @c result has been set. */
@property(nonatomic, readwrite) BOOL hasResult;

@end

#pragma mark - GetStatusRequest

GPB_FINAL @interface GetStatusRequest : GPBMessage

@end

#pragma mark - RebootRequest

GPB_FINAL @interface RebootRequest : GPBMessage

@end

#pragma mark - RebootResponse

GPB_FINAL @interface RebootResponse : GPBMessage

@end

#pragma mark - SpeedTestStats

typedef GPB_ENUM(SpeedTestStats_FieldNumber) {
  SpeedTestStats_FieldNumber_UploadMbps = 1,
  SpeedTestStats_FieldNumber_DownloadMbps = 2,
  SpeedTestStats_FieldNumber_LatencyMs = 3,
  SpeedTestStats_FieldNumber_StartTime = 4,
};

GPB_FINAL @interface SpeedTestStats : GPBMessage


@property(nonatomic, readwrite) uint64_t startTime;


@property(nonatomic, readwrite) float uploadMbps;


@property(nonatomic, readwrite) float downloadMbps;


@property(nonatomic, readwrite) float latencyMs;

@end

#pragma mark - ClientPlatform

typedef GPB_ENUM(ClientPlatform_FieldNumber) {
  ClientPlatform_FieldNumber_Platform = 1,
  ClientPlatform_FieldNumber_MajorVersion = 2,
  ClientPlatform_FieldNumber_MinorVersion = 3,
};

GPB_FINAL @interface ClientPlatform : GPBMessage


@property(nonatomic, readwrite) ClientPlatform_Platform platform;


@property(nonatomic, readwrite) float majorVersion;


@property(nonatomic, readwrite) float minorVersion;

@end

/**
 * Fetches the raw value of a @c ClientPlatform's @c platform property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClientPlatform_Platform_RawValue(ClientPlatform *message);
/**
 * Sets the raw value of an @c ClientPlatform's @c platform property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClientPlatform_Platform_RawValue(ClientPlatform *message, int32_t value);

#pragma mark - SpeedTestRequest

typedef GPB_ENUM(SpeedTestRequest_FieldNumber) {
  SpeedTestRequest_FieldNumber_ClientSpeedtest = 1,
  SpeedTestRequest_FieldNumber_ClientRssi = 2,
  SpeedTestRequest_FieldNumber_ClientPlatform = 3,
};

GPB_FINAL @interface SpeedTestRequest : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) SpeedTestStats *clientSpeedtest;
/** Test to see if @c clientSpeedtest has been set. */
@property(nonatomic, readwrite) BOOL hasClientSpeedtest;


@property(nonatomic, readwrite) float clientRssi;


@property(nonatomic, readwrite, strong, null_resettable) ClientPlatform *clientPlatform;
/** Test to see if @c clientPlatform has been set. */
@property(nonatomic, readwrite) BOOL hasClientPlatform;

@end

#pragma mark - SpeedTestResponse

typedef GPB_ENUM(SpeedTestResponse_FieldNumber) {
  SpeedTestResponse_FieldNumber_DownloadBps = 1,
  SpeedTestResponse_FieldNumber_UploadBps = 2,
  SpeedTestResponse_FieldNumber_LatencyS = 3,
  SpeedTestResponse_FieldNumber_DownloadMbps = 4,
  SpeedTestResponse_FieldNumber_UploadMbps = 5,
  SpeedTestResponse_FieldNumber_LatencyMs = 6,
  SpeedTestResponse_FieldNumber_DownloadMbps1TcpConn = 7,
  SpeedTestResponse_FieldNumber_UploadMbps1TcpConn = 8,
  SpeedTestResponse_FieldNumber_DownloadMbps4TcpConn = 9,
  SpeedTestResponse_FieldNumber_UploadMbps4TcpConn = 10,
  SpeedTestResponse_FieldNumber_DownloadMbps16TcpConn = 11,
  SpeedTestResponse_FieldNumber_UploadMbps16TcpConn = 12,
  SpeedTestResponse_FieldNumber_DownloadMbps64TcpConn = 13,
  SpeedTestResponse_FieldNumber_UploadMbps64TcpConn = 14,
  SpeedTestResponse_FieldNumber_RouterSpeedtest = 15,
};

GPB_FINAL @interface SpeedTestResponse : GPBMessage


@property(nonatomic, readwrite) float downloadBps GPB_DEPRECATED_MSG("SpaceX.API.Device.SpeedTestResponse.download_bps is deprecated (see spacex/api/device/device.proto).");


@property(nonatomic, readwrite) float uploadBps GPB_DEPRECATED_MSG("SpaceX.API.Device.SpeedTestResponse.upload_bps is deprecated (see spacex/api/device/device.proto).");


@property(nonatomic, readwrite) float latencyS GPB_DEPRECATED_MSG("SpaceX.API.Device.SpeedTestResponse.latency_s is deprecated (see spacex/api/device/device.proto).");


@property(nonatomic, readwrite) float downloadMbps GPB_DEPRECATED_MSG("SpaceX.API.Device.SpeedTestResponse.download_mbps is deprecated (see spacex/api/device/device.proto).");


@property(nonatomic, readwrite) float uploadMbps GPB_DEPRECATED_MSG("SpaceX.API.Device.SpeedTestResponse.upload_mbps is deprecated (see spacex/api/device/device.proto).");


@property(nonatomic, readwrite) float latencyMs GPB_DEPRECATED_MSG("SpaceX.API.Device.SpeedTestResponse.latency_ms is deprecated (see spacex/api/device/device.proto).");


@property(nonatomic, readwrite, strong, null_resettable) SpeedTestStats *routerSpeedtest;
/** Test to see if @c routerSpeedtest has been set. */
@property(nonatomic, readwrite) BOOL hasRouterSpeedtest;


@property(nonatomic, readwrite) float downloadMbps1TcpConn;


@property(nonatomic, readwrite) float uploadMbps1TcpConn;


@property(nonatomic, readwrite) float downloadMbps4TcpConn;


@property(nonatomic, readwrite) float uploadMbps4TcpConn;


@property(nonatomic, readwrite) float downloadMbps16TcpConn;


@property(nonatomic, readwrite) float uploadMbps16TcpConn;


@property(nonatomic, readwrite) float downloadMbps64TcpConn;


@property(nonatomic, readwrite) float uploadMbps64TcpConn;

@end

#pragma mark - GetConnectionsRequest

GPB_FINAL @interface GetConnectionsRequest : GPBMessage

@end

#pragma mark - GetConnectionsResponse

typedef GPB_ENUM(GetConnectionsResponse_FieldNumber) {
  GetConnectionsResponse_FieldNumber_Services = 1,
};

GPB_FINAL @interface GetConnectionsResponse : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, GetConnectionsResponse_ServiceConnection*> *services;
/** The number of items in @c services without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger services_Count;

@end

#pragma mark - GetConnectionsResponse_ServiceConnection

typedef GPB_ENUM(GetConnectionsResponse_ServiceConnection_FieldNumber) {
  GetConnectionsResponse_ServiceConnection_FieldNumber_Address = 1,
  GetConnectionsResponse_ServiceConnection_FieldNumber_SecondsSinceSuccess = 2,
};

GPB_FINAL @interface GetConnectionsResponse_ServiceConnection : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *address;


@property(nonatomic, readwrite) int32_t secondsSinceSuccess;

@end

#pragma mark - GetDeviceInfoRequest

GPB_FINAL @interface GetDeviceInfoRequest : GPBMessage

@end

#pragma mark - GetDeviceInfoResponse

typedef GPB_ENUM(GetDeviceInfoResponse_FieldNumber) {
  GetDeviceInfoResponse_FieldNumber_DeviceInfo = 1,
};

GPB_FINAL @interface GetDeviceInfoResponse : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) DeviceInfo *deviceInfo;
/** Test to see if @c deviceInfo has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInfo;

@end

#pragma mark - SetTrustedKeysRequest

typedef GPB_ENUM(SetTrustedKeysRequest_FieldNumber) {
  SetTrustedKeysRequest_FieldNumber_KeysArray = 1,
};

GPB_FINAL @interface SetTrustedKeysRequest : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PublicKey*> *keysArray;
/** The number of items in @c keysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keysArray_Count;

@end

#pragma mark - SetTrustedKeysResponse

GPB_FINAL @interface SetTrustedKeysResponse : GPBMessage

@end

#pragma mark - SetSkuRequest

typedef GPB_ENUM(SetSkuRequest_FieldNumber) {
  SetSkuRequest_FieldNumber_Sku = 1,
  SetSkuRequest_FieldNumber_CountryCode = 2,
  SetSkuRequest_FieldNumber_ApplyCountryCode = 4,
};

GPB_FINAL @interface SetSkuRequest : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *sku;


@property(nonatomic, readwrite, copy, null_resettable) NSString *countryCode;


@property(nonatomic, readwrite) BOOL applyCountryCode;

@end

#pragma mark - SetSkuResponse

GPB_FINAL @interface SetSkuResponse : GPBMessage

@end

#pragma mark - UpdateRequest

GPB_FINAL @interface UpdateRequest : GPBMessage

@end

#pragma mark - UpdateResponse

GPB_FINAL @interface UpdateResponse : GPBMessage

@end

#pragma mark - RestartControlRequest

GPB_FINAL @interface RestartControlRequest : GPBMessage

@end

#pragma mark - RestartControlResponse

GPB_FINAL @interface RestartControlResponse : GPBMessage

@end

#pragma mark - GetNetworkInterfacesRequest

GPB_FINAL @interface GetNetworkInterfacesRequest : GPBMessage

@end

#pragma mark - GetNetworkInterfacesResponse

typedef GPB_ENUM(GetNetworkInterfacesResponse_FieldNumber) {
  GetNetworkInterfacesResponse_FieldNumber_NetworkInterfacesArray = 1006,
};

GPB_FINAL @interface GetNetworkInterfacesResponse : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NetworkInterface*> *networkInterfacesArray;
/** The number of items in @c networkInterfacesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger networkInterfacesArray_Count;

@end

#pragma mark - GetHeapDumpRequest

GPB_FINAL @interface GetHeapDumpRequest : GPBMessage

@end

#pragma mark - GetHeapDumpResponse

typedef GPB_ENUM(GetHeapDumpResponse_FieldNumber) {
  GetHeapDumpResponse_FieldNumber_HeapDump = 1,
};

GPB_FINAL @interface GetHeapDumpResponse : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *heapDump;

@end

#pragma mark - GetLocationRequest

GPB_FINAL @interface GetLocationRequest : GPBMessage

@end

#pragma mark - GetLocationResponse

typedef GPB_ENUM(GetLocationResponse_FieldNumber) {
  GetLocationResponse_FieldNumber_Lla = 1,
  GetLocationResponse_FieldNumber_Ecef = 2,
};

GPB_FINAL @interface GetLocationResponse : GPBMessage


@property(nonatomic, readwrite, strong, null_resettable) LLAPosition *lla;
/** Test to see if @c lla has been set. */
@property(nonatomic, readwrite) BOOL hasLla;


@property(nonatomic, readwrite, strong, null_resettable) ECEFPosition *ecef;
/** Test to see if @c ecef has been set. */
@property(nonatomic, readwrite) BOOL hasEcef;

@end

#pragma mark - DishSetEmcRequest

typedef GPB_ENUM(DishSetEmcRequest_FieldNumber) {
  DishSetEmcRequest_FieldNumber_Theta = 1,
  DishSetEmcRequest_FieldNumber_Phi = 2,
  DishSetEmcRequest_FieldNumber_RxChan = 3,
  DishSetEmcRequest_FieldNumber_TxChan = 4,
  DishSetEmcRequest_FieldNumber_Modulation = 5,
  DishSetEmcRequest_FieldNumber_DesiredTiltAngle = 7,
  DishSetEmcRequest_FieldNumber_ChanOverride = 8,
  DishSetEmcRequest_FieldNumber_ThetaEnabled = 9,
  DishSetEmcRequest_FieldNumber_PhiEnabled = 10,
  DishSetEmcRequest_FieldNumber_Idle = 11,
  DishSetEmcRequest_FieldNumber_FastSwitching = 12,
  DishSetEmcRequest_FieldNumber_SkySearch = 13,
  DishSetEmcRequest_FieldNumber_ForcePllUnlock = 14,
  DishSetEmcRequest_FieldNumber_ForceEirpFailure = 15,
  DishSetEmcRequest_FieldNumber_SnowActiveOverride = 16,
  DishSetEmcRequest_FieldNumber_ManualTilting = 18,
  DishSetEmcRequest_FieldNumber_TiltToStowed = 19,
  DishSetEmcRequest_FieldNumber_Reboot = 20,
  DishSetEmcRequest_FieldNumber_ContinuousMotorTest = 21,
  DishSetEmcRequest_FieldNumber_DistanceOverrideMeters = 22,
};

GPB_FINAL @interface DishSetEmcRequest : GPBMessage


@property(nonatomic, readwrite) double theta;


@property(nonatomic, readwrite) double phi;


@property(nonatomic, readwrite) uint32_t rxChan;


@property(nonatomic, readwrite) uint32_t txChan;


@property(nonatomic, readwrite) uint32_t modulation;


@property(nonatomic, readwrite) double desiredTiltAngle;


@property(nonatomic, readwrite) BOOL chanOverride;


@property(nonatomic, readwrite) BOOL thetaEnabled;


@property(nonatomic, readwrite) BOOL phiEnabled;


@property(nonatomic, readwrite) BOOL idle;


@property(nonatomic, readwrite) BOOL fastSwitching;


@property(nonatomic, readwrite) BOOL skySearch;


@property(nonatomic, readwrite) BOOL forcePllUnlock;


@property(nonatomic, readwrite) BOOL forceEirpFailure;


@property(nonatomic, readwrite) BOOL snowActiveOverride;


@property(nonatomic, readwrite) BOOL manualTilting;


@property(nonatomic, readwrite) BOOL tiltToStowed;


@property(nonatomic, readwrite) BOOL reboot;


@property(nonatomic, readwrite) BOOL continuousMotorTest;


@property(nonatomic, readwrite) double distanceOverrideMeters;

@end

#pragma mark - DishSetEmcResponse

GPB_FINAL @interface DishSetEmcResponse : GPBMessage

@end

#pragma mark - DishGetEmcRequest

GPB_FINAL @interface DishGetEmcRequest : GPBMessage

@end

#pragma mark - DishGetEmcResponse

typedef GPB_ENUM(DishGetEmcResponse_FieldNumber) {
  DishGetEmcResponse_FieldNumber_Uuid = 2,
  DishGetEmcResponse_FieldNumber_Timestamp = 3,
  DishGetEmcResponse_FieldNumber_CplaneUpdates = 11,
  DishGetEmcResponse_FieldNumber_GpsLatitude = 16,
  DishGetEmcResponse_FieldNumber_GpsLongitude = 17,
  DishGetEmcResponse_FieldNumber_GpsPdop = 18,
  DishGetEmcResponse_FieldNumber_RfMode = 19,
  DishGetEmcResponse_FieldNumber_Phi = 20,
  DishGetEmcResponse_FieldNumber_Theta = 21,
  DishGetEmcResponse_FieldNumber_RxChannel = 22,
  DishGetEmcResponse_FieldNumber_TxChannel = 23,
  DishGetEmcResponse_FieldNumber_TDbfMax = 24,
  DishGetEmcResponse_FieldNumber_TCenter = 25,
  DishGetEmcResponse_FieldNumber_BaselineHeating = 26,
  DishGetEmcResponse_FieldNumber_AdditionalHeating = 27,
  DishGetEmcResponse_FieldNumber_TotalHeating = 28,
  DishGetEmcResponse_FieldNumber_TargetTotalHeating = 29,
  DishGetEmcResponse_FieldNumber_AutoPowerSnowMeltEnabled = 30,
  DishGetEmcResponse_FieldNumber_Voltage = 32,
  DishGetEmcResponse_FieldNumber_RxBeamState = 33,
  DishGetEmcResponse_FieldNumber_TxBeamState = 34,
  DishGetEmcResponse_FieldNumber_HalfDuplexState = 35,
  DishGetEmcResponse_FieldNumber_ManualTiltEnabled = 36,
  DishGetEmcResponse_FieldNumber_TiltAngle = 37,
  DishGetEmcResponse_FieldNumber_PllTxLockDetected = 38,
  DishGetEmcResponse_FieldNumber_EirpExceededThreshold = 39,
  DishGetEmcResponse_FieldNumber_EirpScaleOverride = 40,
  DishGetEmcResponse_FieldNumber_IdleOverrideEnabled = 41,
  DishGetEmcResponse_FieldNumber_ThetaOverrideEnabled = 42,
  DishGetEmcResponse_FieldNumber_ThetaOverrideValue = 43,
  DishGetEmcResponse_FieldNumber_PhiOverrideEnabled = 44,
  DishGetEmcResponse_FieldNumber_PhiOverrideValue = 45,
  DishGetEmcResponse_FieldNumber_RxChanOverrideValue = 46,
  DishGetEmcResponse_FieldNumber_TxChanOverrideValue = 47,
  DishGetEmcResponse_FieldNumber_SkySearchOverrideEnabled = 48,
  DishGetEmcResponse_FieldNumber_FastSwitchingEnabled = 49,
  DishGetEmcResponse_FieldNumber_ModulationOverrideValue = 50,
  DishGetEmcResponse_FieldNumber_ForceEirpFailure = 51,
  DishGetEmcResponse_FieldNumber_ForcePllUnlock = 52,
  DishGetEmcResponse_FieldNumber_UtIneSuccess = 53,
  DishGetEmcResponse_FieldNumber_RfReady = 54,
  DishGetEmcResponse_FieldNumber_TiltToStowed = 55,
  DishGetEmcResponse_FieldNumber_Reboot = 56,
  DishGetEmcResponse_FieldNumber_ContinuousMotorTest = 57,
  DishGetEmcResponse_FieldNumber_DistanceOverrideMeters = 58,
};

GPB_FINAL @interface DishGetEmcResponse : GPBMessage


@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;


@property(nonatomic, readwrite) uint64_t timestamp;


@property(nonatomic, readwrite) uint32_t cplaneUpdates;


@property(nonatomic, readwrite) double gpsLatitude;


@property(nonatomic, readwrite) double gpsLongitude;


@property(nonatomic, readwrite) double gpsPdop;


@property(nonatomic, readwrite) uint32_t rfMode;


@property(nonatomic, readwrite) double phi;


@property(nonatomic, readwrite) double theta;


@property(nonatomic, readwrite) uint32_t rxChannel;


@property(nonatomic, readwrite) uint32_t txChannel;


@property(nonatomic, readwrite) float tDbfMax;


@property(nonatomic, readwrite) double tCenter;


@property(nonatomic, readwrite) double baselineHeating;


@property(nonatomic, readwrite) double additionalHeating;


@property(nonatomic, readwrite) double totalHeating;


@property(nonatomic, readwrite) double targetTotalHeating;


@property(nonatomic, readwrite) BOOL autoPowerSnowMeltEnabled;


@property(nonatomic, readwrite) double voltage;


@property(nonatomic, readwrite) uint32_t rxBeamState;


@property(nonatomic, readwrite) uint32_t txBeamState;


@property(nonatomic, readwrite) uint32_t halfDuplexState;


@property(nonatomic, readwrite) BOOL manualTiltEnabled;


@property(nonatomic, readwrite) double tiltAngle;


@property(nonatomic, readwrite) uint32_t pllTxLockDetected;


@property(nonatomic, readwrite) BOOL eirpExceededThreshold;


@property(nonatomic, readwrite) float eirpScaleOverride;


@property(nonatomic, readwrite) BOOL idleOverrideEnabled;


@property(nonatomic, readwrite) BOOL thetaOverrideEnabled;


@property(nonatomic, readwrite) double thetaOverrideValue;


@property(nonatomic, readwrite) BOOL phiOverrideEnabled;


@property(nonatomic, readwrite) double phiOverrideValue;


@property(nonatomic, readwrite) uint32_t rxChanOverrideValue;


@property(nonatomic, readwrite) uint32_t txChanOverrideValue;


@property(nonatomic, readwrite) BOOL skySearchOverrideEnabled;


@property(nonatomic, readwrite) BOOL fastSwitchingEnabled;


@property(nonatomic, readwrite) uint32_t modulationOverrideValue;


@property(nonatomic, readwrite) BOOL forceEirpFailure;


@property(nonatomic, readwrite) BOOL forcePllUnlock;


@property(nonatomic, readwrite) uint32_t utIneSuccess;


@property(nonatomic, readwrite) BOOL rfReady;


@property(nonatomic, readwrite) BOOL tiltToStowed;


@property(nonatomic, readwrite) BOOL reboot;


@property(nonatomic, readwrite) BOOL continuousMotorTest;


@property(nonatomic, readwrite) double distanceOverrideMeters;

@end

#pragma mark - GetPersistentStatsRequest

GPB_FINAL @interface GetPersistentStatsRequest : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
