// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spacex/api/device/transceiver.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class TransceiverFaults;
GPB_ENUM_FWD_DECLARE(DishState);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum TransceiverModulatorState

typedef GPB_ENUM(TransceiverModulatorState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  TransceiverModulatorState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  TransceiverModulatorState_ModstateUnknown = 0,
  TransceiverModulatorState_ModstateEnabled = 1,
  TransceiverModulatorState_ModstateDisabled = 2,
};

GPBEnumDescriptor *TransceiverModulatorState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TransceiverModulatorState_IsValidValue(int32_t value);

#pragma mark - Enum TransceiverTxRxState

typedef GPB_ENUM(TransceiverTxRxState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  TransceiverTxRxState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  TransceiverTxRxState_TxrxUnknown = 0,
  TransceiverTxRxState_TxrxEnabled = 1,
  TransceiverTxRxState_TxrxDisabled = 2,
};

GPBEnumDescriptor *TransceiverTxRxState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TransceiverTxRxState_IsValidValue(int32_t value);

#pragma mark - Enum TransceiverTransmitBlankingState

typedef GPB_ENUM(TransceiverTransmitBlankingState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  TransceiverTransmitBlankingState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  TransceiverTransmitBlankingState_TbUnknown = 0,
  TransceiverTransmitBlankingState_TbEnabled = 1,
  TransceiverTransmitBlankingState_TbDisabled = 2,
};

GPBEnumDescriptor *TransceiverTransmitBlankingState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TransceiverTransmitBlankingState_IsValidValue(int32_t value);

#pragma mark - TransceiverRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TransceiverRoot : GPBRootObject
@end

#pragma mark - TransceiverIFLoopbackTestRequest

typedef GPB_ENUM(TransceiverIFLoopbackTestRequest_FieldNumber) {
  TransceiverIFLoopbackTestRequest_FieldNumber_EnableIfLoopback = 1,
};

GPB_FINAL @interface TransceiverIFLoopbackTestRequest : GPBMessage


@property(nonatomic, readwrite) BOOL enableIfLoopback;

@end

#pragma mark - TransceiverIFLoopbackTestResponse

typedef GPB_ENUM(TransceiverIFLoopbackTestResponse_FieldNumber) {
  TransceiverIFLoopbackTestResponse_FieldNumber_BerLoopbackTest = 1,
  TransceiverIFLoopbackTestResponse_FieldNumber_SnrLoopbackTest = 2,
  TransceiverIFLoopbackTestResponse_FieldNumber_RssiLoopbackTest = 3,
  TransceiverIFLoopbackTestResponse_FieldNumber_PllLock = 4,
};

GPB_FINAL @interface TransceiverIFLoopbackTestResponse : GPBMessage


@property(nonatomic, readwrite) float berLoopbackTest;


@property(nonatomic, readwrite) float snrLoopbackTest;


@property(nonatomic, readwrite) float rssiLoopbackTest;


@property(nonatomic, readwrite) BOOL pllLock;

@end

#pragma mark - TransceiverGetStatusRequest

GPB_FINAL @interface TransceiverGetStatusRequest : GPBMessage

@end

#pragma mark - TransceiverGetStatusResponse

typedef GPB_ENUM(TransceiverGetStatusResponse_FieldNumber) {
  TransceiverGetStatusResponse_FieldNumber_ModState = 1,
  TransceiverGetStatusResponse_FieldNumber_DemodState = 2,
  TransceiverGetStatusResponse_FieldNumber_TxState = 3,
  TransceiverGetStatusResponse_FieldNumber_RxState = 4,
  TransceiverGetStatusResponse_FieldNumber_State = 1006,
  TransceiverGetStatusResponse_FieldNumber_Faults = 1007,
  TransceiverGetStatusResponse_FieldNumber_TransmitBlankingState = 1008,
  TransceiverGetStatusResponse_FieldNumber_ModemAsicTemp = 1009,
  TransceiverGetStatusResponse_FieldNumber_TxIfTemp = 1010,
};

GPB_FINAL @interface TransceiverGetStatusResponse : GPBMessage


@property(nonatomic, readwrite) TransceiverModulatorState modState;


@property(nonatomic, readwrite) TransceiverModulatorState demodState;


@property(nonatomic, readwrite) TransceiverTxRxState txState;


@property(nonatomic, readwrite) TransceiverTxRxState rxState;


@property(nonatomic, readwrite) enum DishState state;


@property(nonatomic, readwrite, strong, null_resettable) TransceiverFaults *faults;
/** Test to see if @c faults has been set. */
@property(nonatomic, readwrite) BOOL hasFaults;


@property(nonatomic, readwrite) TransceiverTransmitBlankingState transmitBlankingState;


@property(nonatomic, readwrite) float modemAsicTemp;


@property(nonatomic, readwrite) float txIfTemp;

@end

/**
 * Fetches the raw value of a @c TransceiverGetStatusResponse's @c modState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransceiverGetStatusResponse_ModState_RawValue(TransceiverGetStatusResponse *message);
/**
 * Sets the raw value of an @c TransceiverGetStatusResponse's @c modState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransceiverGetStatusResponse_ModState_RawValue(TransceiverGetStatusResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c TransceiverGetStatusResponse's @c demodState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransceiverGetStatusResponse_DemodState_RawValue(TransceiverGetStatusResponse *message);
/**
 * Sets the raw value of an @c TransceiverGetStatusResponse's @c demodState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransceiverGetStatusResponse_DemodState_RawValue(TransceiverGetStatusResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c TransceiverGetStatusResponse's @c txState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransceiverGetStatusResponse_TxState_RawValue(TransceiverGetStatusResponse *message);
/**
 * Sets the raw value of an @c TransceiverGetStatusResponse's @c txState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransceiverGetStatusResponse_TxState_RawValue(TransceiverGetStatusResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c TransceiverGetStatusResponse's @c rxState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransceiverGetStatusResponse_RxState_RawValue(TransceiverGetStatusResponse *message);
/**
 * Sets the raw value of an @c TransceiverGetStatusResponse's @c rxState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransceiverGetStatusResponse_RxState_RawValue(TransceiverGetStatusResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c TransceiverGetStatusResponse's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransceiverGetStatusResponse_State_RawValue(TransceiverGetStatusResponse *message);
/**
 * Sets the raw value of an @c TransceiverGetStatusResponse's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransceiverGetStatusResponse_State_RawValue(TransceiverGetStatusResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c TransceiverGetStatusResponse's @c transmitBlankingState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransceiverGetStatusResponse_TransmitBlankingState_RawValue(TransceiverGetStatusResponse *message);
/**
 * Sets the raw value of an @c TransceiverGetStatusResponse's @c transmitBlankingState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransceiverGetStatusResponse_TransmitBlankingState_RawValue(TransceiverGetStatusResponse *message, int32_t value);

#pragma mark - TransceiverFaults

typedef GPB_ENUM(TransceiverFaults_FieldNumber) {
  TransceiverFaults_FieldNumber_OverTempModemAsicFault = 1,
  TransceiverFaults_FieldNumber_OverTempPcbaFault = 2,
  TransceiverFaults_FieldNumber_DcVoltageFault = 3,
};

GPB_FINAL @interface TransceiverFaults : GPBMessage


@property(nonatomic, readwrite) BOOL overTempModemAsicFault;


@property(nonatomic, readwrite) BOOL overTempPcbaFault;


@property(nonatomic, readwrite) BOOL dcVoltageFault;

@end

#pragma mark - TransceiverGetTelemetryRequest

GPB_FINAL @interface TransceiverGetTelemetryRequest : GPBMessage

@end

#pragma mark - TransceiverGetTelemetryResponse

typedef GPB_ENUM(TransceiverGetTelemetryResponse_FieldNumber) {
  TransceiverGetTelemetryResponse_FieldNumber_AntennaPointingMode = 1001,
  TransceiverGetTelemetryResponse_FieldNumber_AntennaPitch = 1002,
  TransceiverGetTelemetryResponse_FieldNumber_AntennaRoll = 1003,
  TransceiverGetTelemetryResponse_FieldNumber_AntennaRxTheta = 1004,
  TransceiverGetTelemetryResponse_FieldNumber_AntennaTrueHeading = 1005,
  TransceiverGetTelemetryResponse_FieldNumber_RxChannel = 1006,
  TransceiverGetTelemetryResponse_FieldNumber_CurrentCellId = 1007,
  TransceiverGetTelemetryResponse_FieldNumber_SecondsUntilSlotEnd = 1008,
  TransceiverGetTelemetryResponse_FieldNumber_WbRssiPeakMagDb = 1009,
  TransceiverGetTelemetryResponse_FieldNumber_PopPingDropRate = 1010,
  TransceiverGetTelemetryResponse_FieldNumber_SnrDb = 1011,
  TransceiverGetTelemetryResponse_FieldNumber_L1SnrAvgDb = 1012,
  TransceiverGetTelemetryResponse_FieldNumber_L1SnrMinDb = 1013,
  TransceiverGetTelemetryResponse_FieldNumber_L1SnrMaxDb = 1014,
  TransceiverGetTelemetryResponse_FieldNumber_LmacSatelliteId = 1015,
  TransceiverGetTelemetryResponse_FieldNumber_TargetSatelliteId = 1016,
  TransceiverGetTelemetryResponse_FieldNumber_GrantMcs = 1017,
  TransceiverGetTelemetryResponse_FieldNumber_GrantSymbolsAvg = 1018,
  TransceiverGetTelemetryResponse_FieldNumber_DedGrant = 1019,
  TransceiverGetTelemetryResponse_FieldNumber_MobilityProactiveSlotChange = 1020,
  TransceiverGetTelemetryResponse_FieldNumber_MobilityReactiveSlotChange = 1021,
  TransceiverGetTelemetryResponse_FieldNumber_RfpTotalSynFailed = 1022,
  TransceiverGetTelemetryResponse_FieldNumber_NumOutOfSeq = 1023,
  TransceiverGetTelemetryResponse_FieldNumber_NumUlmapDrop = 1024,
  TransceiverGetTelemetryResponse_FieldNumber_CurrentSecondsOfSchedule = 1025,
  TransceiverGetTelemetryResponse_FieldNumber_SendLabelSwitchToGroundFailedCalls = 1026,
  TransceiverGetTelemetryResponse_FieldNumber_EmaVelocityX = 1027,
  TransceiverGetTelemetryResponse_FieldNumber_EmaVelocityY = 1028,
  TransceiverGetTelemetryResponse_FieldNumber_EmaVelocityZ = 1029,
  TransceiverGetTelemetryResponse_FieldNumber_CeRssiDb = 1030,
};

GPB_FINAL @interface TransceiverGetTelemetryResponse : GPBMessage


@property(nonatomic, readwrite) uint32_t antennaPointingMode;


@property(nonatomic, readwrite) float antennaPitch;


@property(nonatomic, readwrite) float antennaRoll;


@property(nonatomic, readwrite) float antennaRxTheta;


@property(nonatomic, readwrite) float antennaTrueHeading;


@property(nonatomic, readwrite) uint32_t rxChannel;


@property(nonatomic, readwrite) uint32_t currentCellId;


@property(nonatomic, readwrite) float secondsUntilSlotEnd;


@property(nonatomic, readwrite) float wbRssiPeakMagDb;


@property(nonatomic, readwrite) float popPingDropRate;


@property(nonatomic, readwrite) float snrDb;


@property(nonatomic, readwrite) float l1SnrAvgDb;


@property(nonatomic, readwrite) float l1SnrMinDb;


@property(nonatomic, readwrite) float l1SnrMaxDb;


@property(nonatomic, readwrite) uint32_t lmacSatelliteId;


@property(nonatomic, readwrite) uint32_t targetSatelliteId;


@property(nonatomic, readwrite) uint32_t grantMcs;


@property(nonatomic, readwrite) float grantSymbolsAvg;


@property(nonatomic, readwrite) uint32_t dedGrant;


@property(nonatomic, readwrite) uint32_t mobilityProactiveSlotChange;


@property(nonatomic, readwrite) uint32_t mobilityReactiveSlotChange;


@property(nonatomic, readwrite) uint32_t rfpTotalSynFailed;


@property(nonatomic, readwrite) uint32_t numOutOfSeq;


@property(nonatomic, readwrite) uint32_t numUlmapDrop;


@property(nonatomic, readwrite) float currentSecondsOfSchedule;


@property(nonatomic, readwrite) uint32_t sendLabelSwitchToGroundFailedCalls;


@property(nonatomic, readwrite) double emaVelocityX;


@property(nonatomic, readwrite) double emaVelocityY;


@property(nonatomic, readwrite) double emaVelocityZ;


@property(nonatomic, readwrite) float ceRssiDb;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
